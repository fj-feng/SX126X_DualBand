#include "stm32l4xx_hal.h"
#include "lcd.h"
#include "oledfont.h"  


/*******************************************************************************
* Function Name  : STM32_SSD1963_Init
* Description    : Initializes the SSD1963.
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/

void OLED_Init(void)
{    
	GPIO_InitTypeDef GPIO_InitStructure;
		 __HAL_RCC_GPIOB_CLK_ENABLE();	//Ê¹ÄÜGPIOBÊ±ÖÓ
	   __HAL_RCC_GPIOD_CLK_ENABLE();	//Ê¹ÄÜGPIOBÊ±ÖÓ
	
	GPIO_InitStructure.Pin = GPIO_PIN_8|GPIO_PIN_9;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP ;   //ÍÆÍìÊä³ö
	GPIO_InitStructure.Speed = GPIO_SPEED_FREQ_HIGH;
	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);
	HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9|GPIO_PIN_8,GPIO_PIN_SET); 	//PB6,PB7 Êä³ö¸ß
	
	GPIO_InitStructure.Pin = GPIO_PIN_11|GPIO_PIN_12;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP ;   //ÍÆÍìÊä³ö
	GPIO_InitStructure.Speed = GPIO_SPEED_FREQ_HIGH;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
	HAL_GPIO_WritePin(GPIOD,GPIO_PIN_11|GPIO_PIN_12,GPIO_PIN_SET); 	//PB6,PB7 Êä³ö¸ß
	
	 HAL_Delay(5); /* delay 50 ms */
   LCD_RST(1) ;
	 LCD_RS(0); 
   HAL_Delay(100);
   LCD_RST(0);//Ó²¼þ¸´Î»
   HAL_Delay(100);
   LCD_RST(1) ;
   HAL_Delay(10);
	 
	 
/*Òº¾§Çý¶¯³õÊ¼»¯*/

	 W_COM(0xae);
  
   W_COM(0xa1);    //segment remap

   W_COM(0xda);    //common pads hardware: alternative
   W_COM(0x12);

   W_COM(0xc0);    //common output scan direction:com63~com0

   W_COM(0xa8);    //multiplex ration mode:63
   W_COM(0x3f);

   W_COM(0xd5);    //display divide ratio/osc. freq. mode
   W_COM(0x70);    //Osc. Freq:320kHz,DivideRation:1 

   W_COM(0x81);    //contrast control 
   W_COM(0x60);    // mode:64

   W_COM(0xd9);	   //set pre-charge period
   W_COM(0x22);	   //set period 1:1;period 2:15

   W_COM(0x20);    //Set Memory Addressing Mode
   W_COM(0x02);    //page addressing mode

   W_COM(0xdb);    //VCOM deselect level mode

   W_COM(0x3c);	   //set Vvcomh=0.83*Vcc

   W_COM(0xad);    //master configuration 

   W_COM(0x8e);    //external VCC supply

   W_COM(0xa4);    //out follows RAM content

   W_COM(0xa6);    //set normal display 	
   W_COM(0xaf);
   OLED_Clear();
}


//Ê±ÖÓÑÓÊ±
void IICTWait(void)				  //1=200ns
{
 volatile unsigned long i,j;
  for (i=0; i<1; i++)
  {
     for (j=0; j<10; j++);  		   //2020
  }
}

//IIC ¿ªÊ¼

void IC_IIC_Start(void)
{
  
   LCD_SDIN(1);
   IICTWait();
   LCD_SCLK(1);
   IICTWait();
   LCD_SDIN(0);
   IICTWait();
   LCD_SCLK(0);
   IICTWait();
}


//IIC Í£Ö¹
void IC_IIC_Stop(void)
{
   LCD_SDIN(0);		 
  IICTWait();
   LCD_SCLK(1);	    
   IICTWait();

   LCD_SDIN(1);	
   IICTWait();	  
}


//IICÐ´Êý¾Ý
unsigned short Write_IIC_Data(unsigned short Data)
{
	unsigned char i;

   for(i=0;i<8;i++)
{	
	if(Data&0x80)

	LCD_SDIN(1);
else  
    LCD_SDIN(0);

	LCD_SCLK(1); 
	IICTWait();
//	Delay(1);
	LCD_SCLK(0);  
	IICTWait();
   Data=Data<<1;
}	
	   LCD_SDIN(1);			    //ÊÍ·ÅIIC SDA×ÜÏßÎªÖ÷Æ÷¼þ½ÓÊÕ´ÓÆ÷¼þ²úÉúÓ¦´ðÐÅºÅ	
	   IICTWait();
	   LCD_SCLK(1);	
        IICTWait();				   //µÚ9¸öÊ±ÖÓÖÜÆÚ
	   	LCD_SCLK(0);	
//		IICTWait();
//		while(  LCD_SDIN(1))
//	{
//		if((i++) > 210)
//		{
//		LCD_SCLK(0);	
//				IICTWait();
//			return 0;	//·ÇÓ¦´ð
//		}
//	}
//	LCD_SCLK(0);
//	IICTWait();//Ó¦´ð
//	return 1;
//		
}

//Ð´ÃüÁî
void W_COM(unsigned char command)
{
   IC_IIC_Start();
   Write_IIC_Data(0x78);                //Salve Adress
   Write_IIC_Data(0x00);                   //Ð´ÃüÁî
   Write_IIC_Data(command); 
   IC_IIC_Stop();
}


//Ð´Êý¾Ý
void W_DATA8(unsigned char data)
{
   IC_IIC_Start();
   Write_IIC_Data(0x78);                //Salve Adress
   Write_IIC_Data(0x40);                      //Ð´Êý¾Ý
   Write_IIC_Data(data);
   IC_IIC_Stop();
}




//OLEDµÄÏÔ´æ
//´æ·Å¸ñÊ½ÈçÏÂ.
//[0]0 1 2 3 ... 127	
//[1]0 1 2 3 ... 127	
//[2]0 1 2 3 ... 127	
//[3]0 1 2 3 ... 127	
//[4]0 1 2 3 ... 127	
//[5]0 1 2 3 ... 127	
//[6]0 1 2 3 ... 127	
//[7]0 1 2 3 ... 127 		   
unsigned char OLED_GRAM[128][8];	 

//¿ªÆôOLEDÏÔÊ¾    
void OLED_Display_On(void)
{
	W_COM(0X8D);  //SET DCDCÃüÁî
	W_COM(0X14);  //DCDC ON
	W_COM(0XAF);  //DISPLAY ON
}
//¹Ø±ÕOLEDÏÔÊ¾     
void OLED_Display_Off(void)
{
	W_COM(0X8D);  //SET DCDCÃüÁî
	W_COM(0X10);  //DCDC OFF
	W_COM(0XAE);  //DISPLAY OFF
}		

//¸üÐÂÏÔ´æµ½LCD		 
void OLED_Refresh_Gram(void)
{
	unsigned char i,n;		    
	for(i=0;i<8;i++)  
	{  
		
	  W_COM(0xb0+i); //ÉèÖÃÒ³µØÖ·£¨0~7£			
		W_COM (0x10);      //ÉèÖÃÏÔÊ¾Î»ÖÃ¡ªÁÐµÍµØÖ·
		W_COM (0x00);      //ÉèÖÃÏÔÊ¾Î»ÖÃ¡ªÁÐ¸ßµØÖ·   
		for(n=0;n<128;n++)W_DATA8(OLED_GRAM[n][i]); 
	}   
}

//ÇåÆÁº¯Êý,ÇåÍêÆÁ,Õû¸öÆÁÄ»ÊÇºÚÉ«µÄ!ºÍÃ»µãÁÁÒ»Ñù!!!	  
void OLED_Clear(void)  
{  
	unsigned char i,n;  
	for(i=0;i<8;i++)for(n=0;n<128;n++)OLED_GRAM[n][i]=0X00;  
	OLED_Refresh_Gram();//¸üÐÂÏÔÊ¾
}

//»­µã 
//x:0~127
//y:0~63
//t:1 Ìî³ä 0,Çå¿Õ				   
void OLED_DrawPoint(unsigned char x,unsigned char y,unsigned char t)
{
	unsigned char pos,bx,temp=0;
	if(x>127||y>63)return;//³¬³ö·¶Î§ÁË.
	pos=7-y/8;
	bx=y%8;
	temp=1<<(7-bx);
	if(t)OLED_GRAM[x][pos]|=temp;
	else OLED_GRAM[x][pos]&=~temp;	    
}
//x1,y1,x2,y2 Ìî³äÇøÓòµÄ¶Ô½Ç×ø±ê
//È·±£x1<=x2;y1<=y2 0<=x1<=127 0<=y1<=63	 	 
//dot:0,Çå¿Õ;1,Ìî³ä	  
void OLED_Fill(unsigned char x1,unsigned char y1,unsigned char x2,unsigned char y2,unsigned char dot)  
{  
	unsigned char x,y;  
	for(x=x1;x<=x2;x++)
	{
		for(y=y1;y<=y2;y++)OLED_DrawPoint(x,y,dot);
	}													    
	OLED_Refresh_Gram();//¸üÐÂÏÔÊ¾
}

//ÔÚÖ¸¶¨Î»ÖÃÏÔÊ¾Ò»¸ö×Ö·û,°üÀ¨²¿·Ö×Ö·û
//x:0~127
//y:0~63
//mode:0,·´°×ÏÔÊ¾;1,Õý³£ÏÔÊ¾				 
//size:Ñ¡Ôñ×ÖÌå 12/16/24
void OLED_ShowChar(unsigned char x,unsigned char y,unsigned char chr,unsigned char size,unsigned char mode)
{      			    
	unsigned char temp,t,t1;
	unsigned char y0=y;
	unsigned char csize=(size/8+((size%8)?1:0))*(size/2);		//µÃµ½×ÖÌåÒ»¸ö×Ö·û¶ÔÓ¦µãÕó¼¯ËùÕ¼µÄ×Ö½ÚÊý
	chr=chr-' ';//µÃµ½Æ«ÒÆºóµÄÖµ		 
    for(t=0;t<csize;t++)
    {   
		if(size==12)temp=asc2_1206[chr][t]; 	 	//µ÷ÓÃ1206×ÖÌå
		else if(size==16)temp=asc2_1608[chr][t];	//µ÷ÓÃ1608×ÖÌå
		else if(size==24)temp=asc2_2412[chr][t];	//µ÷ÓÃ2412×ÖÌå
		else return;								//Ã»ÓÐµÄ×Ö¿â
        for(t1=0;t1<8;t1++)
		{
			if(temp&0x80)OLED_DrawPoint(x,y,mode);
			else OLED_DrawPoint(x,y,!mode);
			temp<<=1;
			y++;
			if((y-y0)==size)
			{
				y=y0;
				x++;
				break;
			}
		}  	 
    }          
}

//m^nº¯Êý
unsigned int mypow(unsigned char m,unsigned char n)
{
	unsigned int result=1;	 
	while(n--)result*=m;    
	return result;
}			

//ÏÔÊ¾2¸öÊý×Ö
//x,y :Æðµã×ø±ê	 
//len :Êý×ÖµÄÎ»Êý
//size:×ÖÌå´óÐ¡
//mode:Ä£Ê½	0,Ìî³äÄ£Ê½;1,µþ¼ÓÄ£Ê½
//num:ÊýÖµ(0~4294967295);	 		  
void OLED_ShowNum(unsigned char x,unsigned char y,unsigned int num,unsigned char len,unsigned char size)
{         	
	unsigned char t,temp;
	unsigned char enshow=0;						   
	for(t=0;t<len;t++)
	{
		temp=(num/mypow(10,len-t-1))%10;
		if(enshow==0&&t<(len-1))
		{
			if(temp==0)
			{
				OLED_ShowChar(x+(size/2)*t,y,' ',size,1);
				continue;
			}else enshow=1; 
		 	 
		}
	 	OLED_ShowChar(x+(size/2)*t,y,temp+'0',size,1); 
	}
} 
//ÏÔÊ¾×Ö·û´®
//x,y:Æðµã×ø±ê  
//size:×ÖÌå´óÐ¡ 
//*p:×Ö·û´®ÆðÊ¼µØÖ· 
void OLED_ShowString(unsigned char x,unsigned char y,const unsigned char *p,unsigned char size)
{	
    while((*p<='~')&&(*p>=' '))//ÅÐ¶ÏÊÇ²»ÊÇ·Ç·¨×Ö·û!
    {       
        if(x>(128-(size/2))){x=0;y+=size;}     //»»ÐÐ
        if(y>(64-size)){y=x=0;OLED_Clear();}
        OLED_ShowChar(x,y,*p,size,1);	 
        x+=size/2;                             //»»ÁÐ
        p++;
    }  
}
	
void All_Screen(void)
{
	unsigned char k,i;

	for(k=0;k<8;k++)
	{
		W_COM(0xb0+k);
		W_COM(0x10);
		W_COM(0x00);
		for(i=0;i<128;i++)
		{	
		W_DATA8(0xff);
		}		
	}
}




